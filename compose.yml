services:
    db:
        image: postgres
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - db:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_NAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        profiles:
            - dev
            - prod

    # React and Nginx need different configurations based on
    # whether we are in prod or dev.
    #
    # React:
    #   - In order to enable hot reloading (HMR), we need to
    #     mount the code into a shared volume, which we cannot
    #     do in prod
    #
    # Nginx:
    #   - Depends on react, I did not find any way
    #     to create conditional dependencies in
    #     docker-compose
    frontend_prod:
        build:
            context: ./src
            dockerfile: Dockerfile_prod
        ports:
            - '${PORT}:3000'
        environment:
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_NAME: ${POSTGRES_NAME}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_PORT: ${POSTGRES_PORT}
            PORT: 3000
            HOST: ${HOST}
            CLIENT_ID: ${CLIENT_ID}
            CLIENT_SECRET: ${CLIENT_SECRET}
            BASE_URL: ${BASE_URL}
            SESSION_SECRET: ${SESSION_SECRET}
            DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
            DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
            COUNCIL_SERVER_ISSUE_WEBHOOK_URL: ${COUNCIL_SERVER_ISSUE_WEBHOOK_URL}
            SUPER_ADMIN: ${SUPER_ADMIN}
            DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_NAME}
        profiles:
            - prod

    frontend_dev:
        build:
            context: ./src
            dockerfile: Dockerfile_dev
        ports:
            - '5173:5173'
        environment:
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_NAME: ${POSTGRES_NAME}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_PORT: ${POSTGRES_PORT}
            PORT: 5173
            CLIENT_ID: ${CLIENT_ID}
            CLIENT_SECRET: ${CLIENT_SECRET}
            BASE_URL: ${BASE_URL}
            SESSION_SECRET: ${SESSION_SECRET}
            DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
            DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
            COUNCIL_SERVER_ISSUE_WEBHOOK_URL: ${COUNCIL_SERVER_ISSUE_WEBHOOK_URL}
            SUPER_ADMIN: ${SUPER_ADMIN}
            DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_NAME}
        volumes:
            - ./src:/app
            - /app/node_modules
        profiles:
            - dev

volumes:
    db:
